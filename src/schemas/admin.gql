extend type Query {
  me: ME
  userList: UserList
  userRole(user_id: Int!): [UserRole]
}

type Mutation {
  createAdmin(input: UserInput): Int!
  signIn(input: SignInInput!): String!
  createUserRole(input: UserRoleInput!): Int!
}

type User {
  id: Int
  username: String
  email: String
  fullname: String
  gender: String
  phone_number: String
  dob: String
}

type ME {
  id: Int
  username: String
  email: String
  fullname: String
  gender: String
  phone_number: String
  dob: String
  roles_permission: [UserRole]
}

type UserList {
  data: [User]
}

input SignInInput {
  username: String
  password: String
}

input UserInput {
  username: String
  email: String
  password: String
  fullname: String
  gender: String
  phone_number: String
  dob: String
}

input UserRoleInput {
  user_id: Int
  roles_id: Int
}

type UserRole {
  id: Int
  user_id: Int
  name: String
}
